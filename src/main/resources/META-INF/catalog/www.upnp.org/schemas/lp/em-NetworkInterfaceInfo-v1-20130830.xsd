<?xml version="1.0" encoding="utf-8"?>
<xsd:schema xmlns="urn:schemas-upnp-org:lp:em-NetworkInterfaceInfo" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:schemas-upnp-org:lp:em-NetworkInterfaceInfo" elementFormDefault="qualified" id="NetworkInterfaceInfo">
	<xsd:annotation>
		<xsd:documentation xml:lang="en">
			NetworkInterfaceInfo schema.
			Copyright 2013 UPnP Forum. All rights reserved.
        	</xsd:documentation>
	</xsd:annotation>
	<xsd:element name="NetworkInterfaceInfo" type="NetworkInterfaceInfoType"/>
	<xsd:complexType name="NetworkInterfaceInfoType">
		<xsd:sequence>
			<xsd:element name="DeviceInterface" maxOccurs="unbounded">
				<xsd:complexType>
					<xsd:sequence>
						<xsd:element name="DeviceUUID" minOccurs="1" maxOccurs="1">
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:maxLength value="70"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="FriendlyName" minOccurs="1" maxOccurs="1">
							<xsd:simpleType>
								<xsd:restriction base="xsd:string">
									<xsd:maxLength value="64"/>
								</xsd:restriction>
							</xsd:simpleType>
						</xsd:element>
						<xsd:element name="NetworkInterface" maxOccurs="unbounded">
							<xsd:complexType>
								<xsd:sequence>
									<xsd:element name="SystemName" minOccurs="1" maxOccurs="1">
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:maxLength value="64"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:element>
									<xsd:element name="Description" minOccurs="0" maxOccurs="1">
										<xsd:simpleType>
											<xsd:restriction base="xsd:string">
												<xsd:maxLength value="256"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:element>
									<xsd:element name="MacAddress" type="MacAddressType" minOccurs="1" maxOccurs="1"/>
									<xsd:element name="InterfaceType">
										<xsd:simpleType>
											<xsd:restriction base="xsd:NMTOKEN">
												<xsd:enumeration value="Ethernet"/>
												<xsd:enumeration value="Wi-Fi"/>
												<xsd:enumeration value="HomePNAoverCoax"/>
												<xsd:enumeration value="HomePlug"/>
												<xsd:enumeration value="MoCA"/>
												<xsd:enumeration value="1905"/>
												<xsd:enumeration value="Other"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:element>
									<xsd:element name="NetworkInterfaceMode" minOccurs="1" maxOccurs="1">
										<xsd:simpleType>
											<xsd:restriction base="xsd:NMTOKEN">
												<xsd:enumeration value="Unimplemented"/>
												<xsd:enumeration value="IP-up"/>
												<xsd:enumeration value="IP-up-Periodic"/>
												<xsd:enumeration value="IP-down-no-Wake"/>
												<xsd:enumeration value="IP-down-with-WakeOn"/>
												<xsd:enumeration value="IP-down-with-WakeAuto"/>
												<xsd:enumeration value="IP-down-with-WakeOnAuto"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:element>
									<xsd:element name="AssociatedIpAddresses" type="IpAddressType" minOccurs="0" maxOccurs="1"/>
									<xsd:element name="WakeOnPattern" type="xsd:hexBinary" minOccurs="0" maxOccurs="1"/>
									<xsd:element name="WakeSupportedTransport" minOccurs="0" maxOccurs="1">
										<xsd:simpleType>
											<xsd:restriction base="xsd:NMTOKEN">
												<xsd:enumeration value="UDP-Broadcast"/>
												<xsd:enumeration value="UDP-Unicast"/>
												<xsd:enumeration value="TCP-Unicast"/>
												<xsd:enumeration value="Other"/>
											</xsd:restriction>
										</xsd:simpleType>
									</xsd:element>
									<xsd:element name="MaxWakeOnDelay" type="xsd:unsignedInt" minOccurs="0" maxOccurs="1"/>
									<xsd:element name="DozeDuration" type="xsd:unsignedInt" minOccurs="0" maxOccurs="1"/>
									<xsd:element name="v2" type="v2ExtensionType" minOccurs="0" maxOccurs="1"/>
									<!-- allow any element except those from target namespace -->
									<xsd:choice minOccurs="0" maxOccurs="unbounded">
										<xsd:any namespace="##other" processContents="lax"/>
										<xsd:any namespace="##local" processContents="lax"/>
									</xsd:choice>
								</xsd:sequence>
							</xsd:complexType>
						</xsd:element>
					</xsd:sequence>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="v2" type="v2ExtensionType" minOccurs="0" maxOccurs="1"/>
			<!-- allow any element except those from target namespace -->
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:any namespace="##other" processContents="lax"/>
				<xsd:any namespace="##local" processContents="lax"/>
			</xsd:choice>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="IPv4Address">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="(([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([1-9]?[0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])">
				<!-- Datatype for representing IPv4 addresses.  Examples, 129.83.64.255, 64.128.2.71, etc.-->
				<!-- This datatype restricts each field of the IPv4 address to have a value between zero and 255, -->
				<!-- i.e., [0-255].[0-255].[0-255].[0-255].  Each field if the IPv4 address cannot have leading zeros (e.g. 64.128.02.71 would be invalid).-->
			</xsd:pattern>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="IPv6Address">
		<!-- Restrictions are intended to support the IPv6 address representation forms 1 and 2 defined in RFC 4291. -->
		<!-- In these comments, form 1 is referred to as IPv6-full and form 2 as IPv6-comp. -->
		<!-- Representation form 3 for embedded IPv4 addresses defined in RFC 4291 is not allowed. -->
		<!-- RFC 5952 updates RFC 4291 by defining additional restrictions. -->
		<!-- Additional restrictions hor handling leading zeroes and "::" usage are not enforced. -->
		<!-- Additional restriction for using only lower case letters, a-f, for hex digits is enforced. -->
		<!-- "IPv6-hex" is used in these comments to represent a string of 1-4 haxadecimal digits; IPv6-hex = [a-f0-9]{1,4} -->
		<xsd:union>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7}"/>
				</xsd:restriction>
				<!-- IPv6-full = IPv6-hex *7(":" IPv6-hex) -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="::"/>
				</xsd:restriction>
				<!-- Allow for fully compressed IPv6-comp representation of the unspecified address 0:0:0:0:0:0:0:0 = "::" -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value=":(:[a-f0-9]{1,4}){1,7}"/>
				</xsd:restriction>
				<!-- IPv6-comp with "::" followed by 1-7 IPv6-hex -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){1,7}:"/>
				</xsd:restriction>
				<!-- IPv6-comp with 1-7 IPv6-hex followed by "::" -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){6}(:[a-f0-9]{1,4})"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex *6 "::" IPv6-hex -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){5}(:[a-f0-9]{1,4}){1,2}"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex *5 "::" IPv6-hex *{1,2} -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){4}(:[a-f0-9]{1,4}){1,3}"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex *4 "::" IPv6-hex *{1,3} -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){3}(:[a-f0-9]{1,4}){1,4}"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex *3 "::" IPv6-hex *{1,4} -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:){2}(:[a-f0-9]{1,4}){1,5}"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex *2 "::" IPv6-hex *{1,5} -->
			</xsd:simpleType>
			<xsd:simpleType>
				<xsd:restriction base="xsd:token">
					<xsd:pattern value="([a-f0-9]{1,4}:)(:[a-f0-9]{1,4}){1,6}"/>
				</xsd:restriction>
				<!-- IPv6-comp with IPv6-hex "::" IPv6-hex *{1,6} -->
			</xsd:simpleType>
		</xsd:union>
	</xsd:simpleType>
	<xsd:complexType name="IpAddressType">
		<xsd:choice minOccurs="1" maxOccurs="17">
			<xsd:sequence>
				<xsd:element name="Ipv4" type="IPv4Address" minOccurs="1" maxOccurs="1"/>
			</xsd:sequence>
			<xsd:sequence>
				<xsd:element name="Ipv6" type="IPv6Address" minOccurs="1" maxOccurs="1"/>
			</xsd:sequence>
		</xsd:choice>
	</xsd:complexType>
	<xsd:simpleType name="MacAddressType">
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="([0-9a-fA-F]{2}:){5}[0-9a-fA-F]{2}">
				<!-- Datatype for representing MAC addresses.  Examples, .00:27:10:85:FF:4C, 01:05:10:aa:fc:01, etc. -->
				<!-- This datatype restricts each field of the MAC address to have exactly 2 digits that are hexidecimal digits, -->
				<!-- i.e., [0-9a-fA-F][0-9a-fA-F]:[0-9a-fA-F][0-9a-fA-F]:[0-9a-fA-F][0-9a-fA-F]:[0-9a-fA-F][0-9a-fA-F] -->
			</xsd:pattern>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="v2ExtensionType">
		<xsd:sequence>
			<xsd:element name="v3" type="v3ExtensionType" minOccurs="0"/>
			<!-- allow any element except those from (v2) target namespace -->
			<xsd:choice minOccurs="0" maxOccurs="unbounded">
				<xsd:any namespace="##other" processContents="lax"/>
				<xsd:any namespace="##local" processContents="lax"/>
			</xsd:choice>
		</xsd:sequence>
		<xsd:anyAttribute/>
	</xsd:complexType>
	<xsd:complexType name="v3ExtensionType">
		<xsd:sequence>
			<xsd:any namespace="##targetNamespace" processContents="lax" maxOccurs="unbounded"/>
		</xsd:sequence>
		<xsd:anyAttribute/>
	</xsd:complexType>
</xsd:schema>
